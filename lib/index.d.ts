/************************************** THIRD-PARTY IMPORTS ***************************************/
import { datetime } from './src/datetime';
import { math } from './src/math';
import { defaultPorts } from './src/default-ports';
import { science } from './src/science';
import { regexps } from './src/regexps';
export declare const logLevels: {
    silly: number;
    verbose: number;
    debug: number;
    info: number;
    warn: number;
    error: number;
    wtf: number;
};
/**************************************** TYPE DEFINITIONS ****************************************/
export declare const commonConstants: {
    datetime: {
        isLeap: (year: string | number) => boolean;
        microsecondsPerMillisecond: number;
        microsecondsPerMs: number;
        usPerMs: number;
        usecondsPerMs: number;
        usPerMillisecond: number;
        usecondPerMillisecond: number;
        usecondsPerMillisecond: number;
        μPerMs: number;
        μsPerMs: number;
        μsecondsPerMs: number;
        μPerMillisecond: number;
        μsecondPerMillisecond: number;
        μsPerMillisecond: number;
        μsecondsPerMillisecond: number;
        msPerSec: number;
        millisecondsPerSecond: number;
        msPerSecond: number;
        msPerSeconds: number;
        millisecondsPerSec: number;
        msPerMinute: number;
        millisecondsPerMinute: number;
        msPerMin: number;
        millisecondsPerMin: number;
        msPerHour: number;
        millisecondsPerHour: number;
        msPerHr: number;
        millisecondsPerHr: number;
        msPerDay: number;
        millisecondsPerDay: number;
        msPerCommonYear: number;
        millisecondsPerCommonYear: number;
        msPerLeapYear: number;
        millisecondsPerLeapYear: number;
        secPerMin: number;
        secsPerMin: number;
        secondsPerMinute: number;
        secPerMinute: number;
        secsPerMinute: number;
        secPerHr: number;
        secsPerHr: number;
        secPerHour: number;
        secsPerHour: number;
        secondsPerHour: number;
        secondsPerHr: number;
        secPerDay: number;
        secsPerDay: number;
        secondPerDay: number;
        secondsPerDay: number;
        secPerWeek: number;
        secsPerWeek: number;
        secondPerWeek: number;
        secondsPerWeek: number;
        secPerCommonYear: number;
        secondsPerCommonYear: number;
        secPerLeapYear: number;
        secondsPerLeapYear: number;
        minPerHr: number;
        minPerHour: number;
        minutesPerHr: number;
        minutesPerHour: number;
        minPerDay: number;
        minutesPerDay: number;
        minPerWeek: number;
        minutesPerWeek: number;
        minPerCommonYear: number;
        minutesPerCommonYear: number;
        minPerLeapYear: number;
        minutesPerLeapYear: number;
        hrPerDay: number;
        hrsPerDay: number;
        hoursPerDay: number;
        hrPerWeek: number;
        hrsPerWeek: number;
        hoursPerWeek: number;
        hrPerCommonYear: number;
        hrsPerCommonYear: number;
        hoursPerCommonYear: number;
        hrPerLeapYear: number;
        hrsPerLeapYear: number;
        hoursPerLeapYear: number;
        daysPerWeek: number;
        daysPerCommonYear: number;
        daysPerCommonYr: number;
        daysPerLeapYear: number;
        daysPerLeapYr: number;
        daysPerYrAverage: number;
        daysPerYrMean: number;
        daysPerYearAverage: number;
        daysPerYearMean: number;
        weeksPerYear: {
            full: number;
            rem: {
                common: number;
                leap: number;
            };
        };
        weeksPerCommonYear: number;
        weeksPerLeapYear: number;
        fullWeeksPerYear: number;
        weeksPerYearFloored: number;
        weeksPerCommonYearFlooredRemainder: number;
        weeksPerLeapYearFlooredRemainder: number;
        monthsPerYear: number;
        monPerYear: number;
        monsPerYear: number;
        monPerYr: number;
        monsPerYr: number;
        monthsPerYr: number;
        daysPerMonth: {
            jan: number;
            january: number;
            feb: {
                common: number;
                leap: number;
            };
            february: {
                common: number;
                leap: number;
            };
            mar: number;
            march: number;
            apr: number;
            april: number;
            may: number;
            jun: number;
            june: number;
            jul: number;
            july: number;
            aug: number;
            august: number;
            sep: number;
            sept: number;
            september: number;
            oct: number;
            october: number;
            nov: number;
            november: number;
            dec: number;
            december: number;
        };
        daysPerMon: {
            jan: number;
            january: number;
            feb: {
                common: number;
                leap: number;
            };
            february: {
                common: number;
                leap: number;
            };
            mar: number;
            march: number;
            apr: number;
            april: number;
            may: number;
            jun: number;
            june: number;
            jul: number;
            july: number;
            aug: number;
            august: number;
            sep: number;
            sept: number;
            september: number;
            oct: number;
            october: number;
            nov: number;
            november: number;
            dec: number;
            december: number;
        };
        epochStartYear: number;
        epochStartMonth: number;
        epochStartDate: number;
        epochStartHour: number;
        epochStartMinute: number;
        epochStartSecond: number;
        epochStartDateStr: string;
        epochStartTimeStr: string;
        epochStartDateTimeStr: string;
        unixStartYear: number;
        unixStartMonth: number;
        unixStartDate: number;
        unixStartHour: number;
        unixStartMinute: number;
        unixStartSecond: number;
        unixStartDateStr: string;
        unixStartTimeStr: string;
        unixStartDateTimeStr: string;
    };
    dateTime: {
        isLeap: (year: string | number) => boolean;
        microsecondsPerMillisecond: number;
        microsecondsPerMs: number;
        usPerMs: number;
        usecondsPerMs: number;
        usPerMillisecond: number;
        usecondPerMillisecond: number;
        usecondsPerMillisecond: number;
        μPerMs: number;
        μsPerMs: number;
        μsecondsPerMs: number;
        μPerMillisecond: number;
        μsecondPerMillisecond: number;
        μsPerMillisecond: number;
        μsecondsPerMillisecond: number;
        msPerSec: number;
        millisecondsPerSecond: number;
        msPerSecond: number;
        msPerSeconds: number;
        millisecondsPerSec: number;
        msPerMinute: number;
        millisecondsPerMinute: number;
        msPerMin: number;
        millisecondsPerMin: number;
        msPerHour: number;
        millisecondsPerHour: number;
        msPerHr: number;
        millisecondsPerHr: number;
        msPerDay: number;
        millisecondsPerDay: number;
        msPerCommonYear: number;
        millisecondsPerCommonYear: number;
        msPerLeapYear: number;
        millisecondsPerLeapYear: number;
        secPerMin: number;
        secsPerMin: number;
        secondsPerMinute: number;
        secPerMinute: number;
        secsPerMinute: number;
        secPerHr: number;
        secsPerHr: number;
        secPerHour: number;
        secsPerHour: number;
        secondsPerHour: number;
        secondsPerHr: number;
        secPerDay: number;
        secsPerDay: number;
        secondPerDay: number;
        secondsPerDay: number;
        secPerWeek: number;
        secsPerWeek: number;
        secondPerWeek: number;
        secondsPerWeek: number;
        secPerCommonYear: number;
        secondsPerCommonYear: number;
        secPerLeapYear: number;
        secondsPerLeapYear: number;
        minPerHr: number;
        minPerHour: number;
        minutesPerHr: number;
        minutesPerHour: number;
        minPerDay: number;
        minutesPerDay: number;
        minPerWeek: number;
        minutesPerWeek: number;
        minPerCommonYear: number;
        minutesPerCommonYear: number;
        minPerLeapYear: number;
        minutesPerLeapYear: number;
        hrPerDay: number;
        hrsPerDay: number;
        hoursPerDay: number;
        hrPerWeek: number;
        hrsPerWeek: number;
        hoursPerWeek: number;
        hrPerCommonYear: number;
        hrsPerCommonYear: number;
        hoursPerCommonYear: number;
        hrPerLeapYear: number;
        hrsPerLeapYear: number;
        hoursPerLeapYear: number;
        daysPerWeek: number;
        daysPerCommonYear: number;
        daysPerCommonYr: number;
        daysPerLeapYear: number;
        daysPerLeapYr: number;
        daysPerYrAverage: number;
        daysPerYrMean: number;
        daysPerYearAverage: number;
        daysPerYearMean: number;
        weeksPerYear: {
            full: number;
            rem: {
                common: number;
                leap: number;
            };
        };
        weeksPerCommonYear: number;
        weeksPerLeapYear: number;
        fullWeeksPerYear: number;
        weeksPerYearFloored: number;
        weeksPerCommonYearFlooredRemainder: number;
        weeksPerLeapYearFlooredRemainder: number;
        monthsPerYear: number;
        monPerYear: number;
        monsPerYear: number;
        monPerYr: number;
        monsPerYr: number;
        monthsPerYr: number;
        daysPerMonth: {
            jan: number;
            january: number;
            feb: {
                common: number;
                leap: number;
            };
            february: {
                common: number;
                leap: number;
            };
            mar: number;
            march: number;
            apr: number;
            april: number;
            may: number;
            jun: number;
            june: number;
            jul: number;
            july: number;
            aug: number;
            august: number;
            sep: number;
            sept: number;
            september: number;
            oct: number;
            october: number;
            nov: number;
            november: number;
            dec: number;
            december: number;
        };
        daysPerMon: {
            jan: number;
            january: number;
            feb: {
                common: number;
                leap: number;
            };
            february: {
                common: number;
                leap: number;
            };
            mar: number;
            march: number;
            apr: number;
            april: number;
            may: number;
            jun: number;
            june: number;
            jul: number;
            july: number;
            aug: number;
            august: number;
            sep: number;
            sept: number;
            september: number;
            oct: number;
            october: number;
            nov: number;
            november: number;
            dec: number;
            december: number;
        };
        epochStartYear: number;
        epochStartMonth: number;
        epochStartDate: number;
        epochStartHour: number;
        epochStartMinute: number;
        epochStartSecond: number;
        epochStartDateStr: string;
        epochStartTimeStr: string;
        epochStartDateTimeStr: string;
        unixStartYear: number;
        unixStartMonth: number;
        unixStartDate: number;
        unixStartHour: number;
        unixStartMinute: number;
        unixStartSecond: number;
        unixStartDateStr: string;
        unixStartTimeStr: string;
        unixStartDateTimeStr: string;
    };
    dateAndTime: {
        isLeap: (year: string | number) => boolean;
        microsecondsPerMillisecond: number;
        microsecondsPerMs: number;
        usPerMs: number;
        usecondsPerMs: number;
        usPerMillisecond: number;
        usecondPerMillisecond: number;
        usecondsPerMillisecond: number;
        μPerMs: number;
        μsPerMs: number;
        μsecondsPerMs: number;
        μPerMillisecond: number;
        μsecondPerMillisecond: number;
        μsPerMillisecond: number;
        μsecondsPerMillisecond: number;
        msPerSec: number;
        millisecondsPerSecond: number;
        msPerSecond: number;
        msPerSeconds: number;
        millisecondsPerSec: number;
        msPerMinute: number;
        millisecondsPerMinute: number;
        msPerMin: number;
        millisecondsPerMin: number;
        msPerHour: number;
        millisecondsPerHour: number;
        msPerHr: number;
        millisecondsPerHr: number;
        msPerDay: number;
        millisecondsPerDay: number;
        msPerCommonYear: number;
        millisecondsPerCommonYear: number;
        msPerLeapYear: number;
        millisecondsPerLeapYear: number;
        secPerMin: number;
        secsPerMin: number;
        secondsPerMinute: number;
        secPerMinute: number;
        secsPerMinute: number;
        secPerHr: number;
        secsPerHr: number;
        secPerHour: number;
        secsPerHour: number;
        secondsPerHour: number;
        secondsPerHr: number;
        secPerDay: number;
        secsPerDay: number;
        secondPerDay: number;
        secondsPerDay: number;
        secPerWeek: number;
        secsPerWeek: number;
        secondPerWeek: number;
        secondsPerWeek: number;
        secPerCommonYear: number;
        secondsPerCommonYear: number;
        secPerLeapYear: number;
        secondsPerLeapYear: number;
        minPerHr: number;
        minPerHour: number;
        minutesPerHr: number;
        minutesPerHour: number;
        minPerDay: number;
        minutesPerDay: number;
        minPerWeek: number;
        minutesPerWeek: number;
        minPerCommonYear: number;
        minutesPerCommonYear: number;
        minPerLeapYear: number;
        minutesPerLeapYear: number;
        hrPerDay: number;
        hrsPerDay: number;
        hoursPerDay: number;
        hrPerWeek: number;
        hrsPerWeek: number;
        hoursPerWeek: number;
        hrPerCommonYear: number;
        hrsPerCommonYear: number;
        hoursPerCommonYear: number;
        hrPerLeapYear: number;
        hrsPerLeapYear: number;
        hoursPerLeapYear: number;
        daysPerWeek: number;
        daysPerCommonYear: number;
        daysPerCommonYr: number;
        daysPerLeapYear: number;
        daysPerLeapYr: number;
        daysPerYrAverage: number;
        daysPerYrMean: number;
        daysPerYearAverage: number;
        daysPerYearMean: number;
        weeksPerYear: {
            full: number;
            rem: {
                common: number;
                leap: number;
            };
        };
        weeksPerCommonYear: number;
        weeksPerLeapYear: number;
        fullWeeksPerYear: number;
        weeksPerYearFloored: number;
        weeksPerCommonYearFlooredRemainder: number;
        weeksPerLeapYearFlooredRemainder: number;
        monthsPerYear: number;
        monPerYear: number;
        monsPerYear: number;
        monPerYr: number;
        monsPerYr: number;
        monthsPerYr: number;
        daysPerMonth: {
            jan: number;
            january: number;
            feb: {
                common: number;
                leap: number;
            };
            february: {
                common: number;
                leap: number;
            };
            mar: number;
            march: number;
            apr: number;
            april: number;
            may: number;
            jun: number;
            june: number;
            jul: number;
            july: number;
            aug: number;
            august: number;
            sep: number;
            sept: number;
            september: number;
            oct: number;
            october: number;
            nov: number;
            november: number;
            dec: number;
            december: number;
        };
        daysPerMon: {
            jan: number;
            january: number;
            feb: {
                common: number;
                leap: number;
            };
            february: {
                common: number;
                leap: number;
            };
            mar: number;
            march: number;
            apr: number;
            april: number;
            may: number;
            jun: number;
            june: number;
            jul: number;
            july: number;
            aug: number;
            august: number;
            sep: number;
            sept: number;
            september: number;
            oct: number;
            october: number;
            nov: number;
            november: number;
            dec: number;
            december: number;
        };
        epochStartYear: number;
        epochStartMonth: number;
        epochStartDate: number;
        epochStartHour: number;
        epochStartMinute: number;
        epochStartSecond: number;
        epochStartDateStr: string;
        epochStartTimeStr: string;
        epochStartDateTimeStr: string;
        unixStartYear: number;
        unixStartMonth: number;
        unixStartDate: number;
        unixStartHour: number;
        unixStartMinute: number;
        unixStartSecond: number;
        unixStartDateStr: string;
        unixStartTimeStr: string;
        unixStartDateTimeStr: string;
    };
    math: {
        pi: number;
        PI: number;
        π: number;
        e: number;
        euler: number;
        EULER: number;
        phi: number;
        PHI: number;
        φ: number;
        degreesInCircle: number;
        degInCircle: number;
        circleDeg: number;
        circleDegrees: number;
        degreesInHalfCircle: number;
        degInHalfCircle: number;
        halfCircleDeg: number;
        halfCircleDegrees: number;
        rightAngleDeg: number;
        rightAngleDegrees: number;
        rightAngle: number;
        sidesInSquare: number;
        sidesInASquare: number;
        squareSides: number;
        numSidesSquare: number;
        sidesInTriangle: number;
        sidesInATriangle: number;
        triangleSides: number;
        numSidesTriangle: number;
    };
    defaultPorts: {
        db: {
            teradata: number;
            mssql: number;
            oracle: number[];
            mariaDB: number;
            mariaDb: number;
            mariadb: number;
            maria: number;
            mysql: number;
            sap: number;
            pg: number;
            postgres: number;
            postgresql: number;
            postgreSQL: number;
            couch: number;
            redis: number;
            cassandra: number;
            solr: number;
            elasticsearch: number;
            mongo: number[];
            mongodb: number[];
            db2: number;
        };
        dbPortsList: any;
        general: {} & {
            teradata: number;
            mssql: number;
            oracle: number[];
            mariaDB: number;
            mariaDb: number;
            mariadb: number;
            maria: number;
            mysql: number;
            sap: number;
            pg: number;
            postgres: number;
            postgresql: number;
            postgreSQL: number;
            couch: number;
            redis: number;
            cassandra: number;
            solr: number;
            elasticsearch: number;
            mongo: number[];
            mongodb: number[];
            db2: number;
        } & {
            express: number;
            expressJS: number;
            expressJs: number;
            expressjs: number;
            http: number;
            telnet: number;
            smtp: number;
            dns: number;
            pop3: number;
            irc: number;
            https: number;
            ssh: number;
        };
        all: {} & {
            teradata: number;
            mssql: number;
            oracle: number[];
            mariaDB: number;
            mariaDb: number;
            mariadb: number;
            maria: number;
            mysql: number;
            sap: number;
            pg: number;
            postgres: number;
            postgresql: number;
            postgreSQL: number;
            couch: number;
            redis: number;
            cassandra: number;
            solr: number;
            elasticsearch: number;
            mongo: number[];
            mongodb: number[];
            db2: number;
        } & {} & {
            express: number;
            expressJS: number;
            expressJs: number;
            expressjs: number;
            http: number;
            telnet: number;
            smtp: number;
            dns: number;
            pop3: number;
            irc: number;
            https: number;
            ssh: number;
        };
    };
    defPorts: {} & {
        teradata: number;
        mssql: number;
        oracle: number[];
        mariaDB: number;
        mariaDb: number;
        mariadb: number;
        maria: number;
        mysql: number;
        sap: number;
        pg: number;
        postgres: number;
        postgresql: number;
        postgreSQL: number;
        couch: number;
        redis: number;
        cassandra: number;
        solr: number;
        elasticsearch: number;
        mongo: number[];
        mongodb: number[];
        db2: number;
    } & {
        express: number;
        expressJS: number;
        expressJs: number;
        expressjs: number;
        http: number;
        telnet: number;
        smtp: number;
        dns: number;
        pop3: number;
        irc: number;
        https: number;
        ssh: number;
    };
    dbPorts: {
        teradata: number;
        mssql: number;
        oracle: number[];
        mariaDB: number;
        mariaDb: number;
        mariadb: number;
        maria: number;
        mysql: number;
        sap: number;
        pg: number;
        postgres: number;
        postgresql: number;
        postgreSQL: number;
        couch: number;
        redis: number;
        cassandra: number;
        solr: number;
        elasticsearch: number;
        mongo: number[];
        mongodb: number[];
        db2: number;
    };
    dbPortsList: any;
    science: {
        speedOfLightMetresPerSec: number;
        speedOfLightMetresPerSecond: number;
        speedOfLightMPS: number;
        lightSpeedMetresPerSec: number;
        lightSpeedMetresPerSecond: number;
        zeroKelvinInCelsius: number;
        zeroKInCelsius: number;
        zeroKelvinInC: number;
    };
    sci: {
        speedOfLightMetresPerSec: number;
        speedOfLightMetresPerSecond: number;
        speedOfLightMPS: number;
        lightSpeedMetresPerSec: number;
        lightSpeedMetresPerSecond: number;
        zeroKelvinInCelsius: number;
        zeroKInCelsius: number;
        zeroKelvinInC: number;
    };
    logLevels: {
        silly: number;
        verbose: number;
        debug: number;
        info: number;
        warn: number;
        error: number;
        wtf: number;
    };
    logLvls: {
        silly: number;
        verbose: number;
        debug: number;
        info: number;
        warn: number;
        error: number;
        wtf: number;
    };
    lifeTheUniverseAndEverything: number;
    lifeTheUniverseEverything: number;
    lengths: {
        maxChars: {
            domainName: number;
            emailAddress: number;
            tweet: number;
            twitter: number;
            twitterTweet: number;
            postgresIdentifier: number;
        };
        maxSeconds: {
            vineVideo: number;
            vine: number;
            youtubeVideo: number;
        };
    };
    regexps: {
        FIRST_CHAR_REGEXP: RegExp;
        TIME_24HR_FORMAT: RegExp;
        NEGATIVE_INTEGER: RegExp;
        "DD/MM/YY_DATE": RegExp;
        HEX_OF_COLOR_VAL: RegExp;
    };
};
export { lengths, lifeTheUniverseAndEverything };
export { datetime as dateTime, defaultPorts, science, regexps, math };
